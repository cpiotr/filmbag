buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")
        classpath("org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion")
        classpath("mysql:mysql-connector-java:$mysqlVersion")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "org.flywaydb.flyway" version "5.2.4"
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'

group 'pl.ciruk'
version "${version != 'unspecified' ? version : 'SNAPSHOT'}"


repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-security:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-jersey:$springBootVersion")
    compile("org.glassfish.jersey.media:jersey-media-sse:$jerseyVersion")

    compile("org.mariadb.jdbc:mariadb-java-client:$mariaDbVersion")

    compile("redis.clients:jedis:$jedisVersion")

    compile("javax.xml.bind:jaxb-api:$jaxbVersion")

    compile("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion")
    compile("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
    compile("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
    compile("io.github.microutils:kotlin-logging:$kotlinLoggingVersion")

    compile("com.squareup.okhttp3:okhttp:$okHttpVersion")

    compile("com.esotericsoftware:kryo:$kryoVersion")
    compile("io.protostuff:protostuff-runtime:1.7.4")
    compile("io.protostuff:protostuff-core:1.7.4")

    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testCompile("org.testcontainers:testcontainers:$testcontainersVersion")
    testCompile("org.testcontainers:mariadb:$testcontainersVersion")
    testCompile("org.testcontainers:junit-jupiter:$testcontainersVersion")
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "$javaVersion"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "$javaVersion"
    }
}

test {
    useJUnitPlatform()
}

flyway {
    url = 'jdbc:mysql://172.17.0.2:3306/testdb'
    user = 'root'
}

wrapper {
    gradleVersion = '6.3'
}


println "Building filmbag $version"
